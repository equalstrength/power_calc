---
title: "Note on EqualStrength power analysis"
format:
  docx:
    reference-doc: es_template.docx
toc: false
number-sections: true
date-modified: "`r Sys.Date()`"
execute:
    echo: false
    warning: false
    message: false
    cache: true
bibliography: Power.bib
---

```{r}
library(tidyverse) # data manipulation
library(broom) # tidy output table
library(purrr) # replace for loop
library(furrr) # increase purrr's performance using multicore processing

## Parameters #############################################################

in_alpha <- 0.005  # Threshold for significance level (Type I error prob.)
in_sample <- seq(5000, 16000, 100) #Sample sizes with min, max and increment
in_cb_maj <- 0.4 # Callback rate for majority group
# Effect size (ES) for main treatment using Cohen's h formula
in_es_main <- -0.15
# Second treatment effect size (half of the main effect)
in_es_sec <- in_es_main
# Interaction effect size (1/3 of the main effect)
in_es_interact <- in_es_main/2 * -1

in_ngroups <- 3 # total number of ethnic groups in the main treatment
in_ncountries  <- 7 # number of countries in the sample of the interaction effect
in_reps <- 150 # number of repetitions for each sample size

```

```{r}
# Estimation ##################################################################

# Function for simulation ===============================================
sim_data <- function(n, base_cb, ngroups, treat1, treat2, interact){
  
  # a) Create the two variables, and assign treatment distribution (probabilities) in last part
  dat <- tibble(
    minority = sample(c('maj', paste0('min', 1:(ngroups-1))), n, 
                      replace = TRUE, prob = c(rep(1/ngroups, ngroups))),
    second_treat = sample(c(0, 1), n, replace = TRUE, prob = c(0.5, 0.5))
  )

  # b) Create the outcome  based on probabilities
  dat$p <- base_cb +
    (treat1 * (dat$minority != 'maj')) +
    (treat2 * dat$second_treat) +
    (interact * (dat$minority != 'maj') * dat$second_treat)

  # c) To determine outcome: first create a random number between 0 and 1,
  # then, if that number is above "p", we assign a callback ("1")
  dat$random <- runif(nrow(dat), min = 0, max = 1)
  dat$outcome <- ifelse(dat$random < dat$p, 1, 0)

  # d) Estimate regression model, tidy it, save output with sample size.
  m1 <- lm(outcome ~ minority * second_treat,  data = dat)  
  m1_out <- tidy(m1) 
  m1_out$n <- n

  return(m1_out)
}

# Creating data frame with simulated data ===================================
tb_params <- data.frame(
  expand.grid(
    n = in_sample,
    base_cb = in_cb_maj,
    ngroups = in_ngroups,
    treat1 = in_es_main,
    treat2 = in_es_sec,
    interact = in_es_interact)
)

tb_duplicated <- replicate(in_reps, tb_params, simplify = FALSE)
tb_final <- do.call(rbind, tb_duplicated)

# Apply function to simulated data =======================================


set.seed(13) # replicate results
plan(multisession, workers = 5)  # number of cpu cores for parallel process.

tb_result <- furrr::future_pmap_dfr(tb_final, sim_data, .progress = TRUE, 
                .options = furrr_options(packages = "broom", seed = TRUE))


```

```{r}
## Results ###################################################################


# Define significance ===================================================
tb_result$significant <- if_else(tb_result$p.value < in_alpha, 1, 0)


# Group and summarise the results =======================================
tb_summary <-
  tb_result  |>
  filter(str_detect(term, ':')) |> # only interaction terms
  group_by(n)  |>
  summarise(power = mean(significant), .groups = "drop")


# Recording  key numbers for reporting  =================================
sample_result <- 
  tb_summary |>
    filter(power > 0.8) |> 
    summarise(pooled = min(n),
              country = round(min(n)/in_ncountries))


```

# Summary

We estimated power as a function of a given i) sample size, ii) significance level, and iii) effect size for a pooled sample of all participating countries. For the individual simulated sample sizes, we used a sequence of different sizes varying from **`r format(min(in_sample), big.mark = ',')`** to **`r format(max(in_sample), big.mark = ',')`**. The significance level was determined as **`r in_alpha`** following recent recommendations for claims of discovery of new effects [@benjamin_redefine_2017]. We assumed a baseline callback rate of **`r in_cb_maj`** and a conservative treatment effect size of **`r in_es_main`** based on previous studies [@zschirnt_ethnic_2016; @larsen_pakistani_2021; @lippens_state_2023] 

Apart from these generic parameters, we also incorporated specific features from the EqualStrength research design. First we included a second treatment postulated to have the same size of the effect of the main treatment (**`r in_es_sec`**). Finally, we also incorporated to the model an interaction term between the two treatments with an effect size assigned as half of the effect size of the main treatment (**`r in_es_interact`**). 

The estimated sample size results from linear models [@gomila_logistic_2021] of simulated datasets using different combinations of parameters present in the EqualStrength research design. Following this method, we estimate a minimum sample size of **`r format(sample_result$pooled, big.mark=",")`** observations for each domain in each of the  **`r  in_ncountries`** countries participating in the pooled sample. This sample size is sufficient to get a power equal or greater than 80% if we observe an effect size of the interaction term equal or greater than **`r in_es_interact`**.

# Introduction

In this note, we describe the analysis used to estimate the statistical power for EqualStrength tests across different sample sizes. Power is defined here as the probability of rejecting the null hypothesis when it is, in fact, false. In other words, in the context of the EqualStrength project, we are using different parameters to estimate the probability of correctly accepting the hypothesis of discrimination when there is in fact discrimination.  This analysis is fully reproducible and the code is available at [https://github.com/equalstrength/power_calc](https://github.com/equalstrength/power_calc)
 

## Limitations

As with any power analysis, the scope of this analysis is limited to the statistical significance of the test only. Apart from the general limitations of the NHST approach [@mcshane_abandon_2019], this analysis ignores the probability of the estimate being in the wrong direction or exaggerated [@gelman_beyond_2014].

# Main parameters

We estimate power as a function of a given i) sample size, ii) significance level, and iii) effect size in the context of each participating country.

For the sample size, we use a sequence of different sizes varying from `r min(in_sample)` to `r max(in_sample)`. The significance level was determined following recent recommendations for claims of discovery of new effects [@benjamin_redefine_2017]:

- **Alpha**: `r in_alpha`.  

The effect size can be specified either from previous studies or by assuming a "minimum effect that would be substantively important" [@gelman_beyond_2014] or interesting [@lakens_sample_2022]. An overview of recent studies indicate a substantial variation of effect sizes depending on the setting and country[^1].  Several studies also highlight that any postulation of effect sizes based on previous studies is severely limited by publication bias, population effect size heterogeneity, and model error [@anderson_sample-size_2017], which can lead to "overly optimistic" expectations [@lakens_sample_2022]. Here we posit the following baseline callback rate and effect size for the main treatment: 

- **Majority group call-back rate**: `r in_cb_maj`  

- **Effect size of the main treatment**: `r in_es_main`. 

[^1]: After reviewing [several previous studies](https://docs.google.com/document/d/11qWamqVtMofvPXyoIFzMHennLJznyNCW/edit?usp=sharing&ouid=116090494512376532643&rtpof=true&sd=true), we have found baseline callback rates ranging from 60-20%, call-bake rate differences from -31% (-0.31) to +7.3 (0.073). Ethnicity differences in some GEMM papers [@ramos_labour_2021; @larsen_pakistani_2021] run from -17 to -6, and gender from +7 to +4.


# Specific parameters 

In addition to the previous parameters which are commonly found in similar power analyses, we incorporate specific features from the EqualStrength research design. First we included a second treatment and an interaction term between the two treatments. 

The effect size of the second treatment is postulated to be half the same size of the main treatment (**`r round(in_es_sec, 2)`**). Furthermore, the interaction effect size is assigned as half of the effect size of the main treatment, which results in the following value:

- **Interaction effect size**: `r in_es_interact`. 

# Simulation 

Using a series of simulated data, it is possible to calculate the power with additional parameters. The estimates result from linear models [@gomila_logistic_2021] of simulated datasets incorporating different combinations of parameters present in the EqualStrength research design.  Here we also get estimates for main treatments using two minority groups in addition to the majority group. The power is calculated as the proportion of times across all simulations in which the interaction term p-value was higher than `r in_alpha`.

```{r}
  tb_summary |>
    ggplot(aes(x = n, y = power))+
    geom_point(color = "#F77F00") +
    geom_smooth(method = "loess") +
    geom_hline(yintercept = 0.8, color = "red", linetype = 2) +
    labs(title = "Figure 1 - Power of the interaction term", 
          subtitle = paste0("Based on ", format(nrow(tb_result), big.mark=","), " simulations"))+
    theme_minimal() +
    theme(legend.position = "bottom")
```

Following this method, we estimate a minimum pooled sample size of **`r format(sample_result$pooled, big.mark=",")`**, which means **`r format(sample_result$country, big.mark=",")`** observations for each domain in each of the  **`r  in_ncountries`** countries. This sample size is sufficient to get a power equal or greater than 80% if we observe an effect size of the interaction term equal or greater than **`r in_es_interact`**.


# Hungary, Czechia and national sub-groups

The pooled sample detailed in the previous sections does not include the data that will be collected in two countries (Hungary and Czechia) considering cross-comparability issues for the ethnic minority groups. Therefore, a different power analysis was conducted for these two countries. In this separate analysis, the interaction term is not included in the simulations. Therefore, the power is calculated as the proportion of times in which both effects are statistically significant. 

```{r}

in_sample_country <- seq(200, 1500, 50) #Sample sizes with min, max and increment


# Function for simulation ===============================================
    sim_data_country <- function(n, base_cb, ngroups, treat1, treat2){
      
      # a) Create the two variables, and assign treatment distribution (probabilities) in last part
      dat <- tibble(
        minority = sample(c('maj', paste0('min', 1:(ngroups-1))), n, 
                          replace = TRUE, prob = c(rep(1/ngroups, ngroups))),
        second_treat = sample(c(0, 1), n, replace = TRUE, prob = c(0.5, 0.5))
      )
      
      # b) Create the outcome based on probabilities
      dat$p <- base_cb +
        (treat1 * (dat$minority != 'maj')) +
        (treat2 * dat$second_treat)
      
      
      # c) To determine outcome: first create a random number between 0 and 1,
      # then, if that number is above "p", we assign a callback ("1")
      dat$random <- runif(nrow(dat), min = 0, max = 1)
      dat$outcome <- ifelse(dat$random < dat$p, 1, 0)
      
      # d) Estimate regression model, tidy it, save output with sample size.
      m1 <- lm(outcome ~ minority + second_treat, data = dat)  
      m1_out <- tidy(m1) 
      m1_out$n <- n      
      
      return(m1_out)
    }


    # Define the parameters data frame
    tb_params_country <- data.frame(
      expand.grid(
        n = in_sample_country,
        base_cb = in_cb_maj,
        ngroups = in_ngroups,
        treat1 = in_es_main,
        treat2 = in_es_sec)
        )
    
    # Duplicate the parameters data frame
    tb_duplicated_country <- replicate(in_reps, tb_params_country, simplify = FALSE)
    tb_final_country <- do.call(rbind, tb_duplicated_country)
    
    # Apply function to simulated data
    set.seed(13) # replicate results
    plan(multisession, workers = 5)  # number of cpu cores for parallel process.

    tb_result_country <- furrr::future_pmap_dfr(tb_final_country, sim_data_country, .progress = TRUE, 
                    .options = furrr_options(packages = "broom", seed = TRUE))


    # Define significance
    tb_result_country$significant <- if_else(tb_result_country$p.value < in_alpha, 1, 0)

```

The parameters are the same as the ones described previously except for the range of sample sizes simulated that varied from `r min(in_sample_country)` to `r max(in_sample_country)`. 

```{r}
sample_country <-
 tb_result_country |> 
      group_by(term, n)  |>
      summarise(power = mean(significant), .groups = "drop",  total = n()) |> 
      mutate(pwr80 = if_else(power > 0.8, 1, 0)) |>
      group_by(n) |> 
      summarise(mean = mean(pwr80)) |> 
      filter(mean == 1)
```

As a result, the minimum sample size for which both treatment effects have a power equal or greater than 80% is equal to **`r min(sample_country$n)`**. As this calculation considers two minority groups, this also means that if a country from the pooled sample wishes to compare a subgroup within the two minority groups, this subgroup should have at least **`r round(min(sample_country$n)/3)`** observations. 


# Custom analysis

These calculations can be reproduced or replicated with different parameters using [this website](https://danielucd.shinyapps.io/PowerCalc/) for the pooled sample  or [this website](https://danielucd.shinyapps.io/country_sample/) for the individual country sample. 

The code to reproduce the analyses detailed in this note is available in [this repository](https://github.com/equalstrength/power_calc).


# References



